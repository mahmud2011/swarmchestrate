definitions:
  domain.Application:
    properties:
      cloud_svc:
        items:
          type: integer
        type: array
      cloud_svc_cluster:
        type: string
      cloud_svc_heartbeat:
        type: string
      cloud_svc_nodes:
        type: string
      cloud_svc_status:
        type: string
      cloud_svc_version:
        type: string
      created_at:
        type: string
      edge_svc:
        items:
          type: integer
        type: array
      edge_svc_cluster:
        type: string
      edge_svc_heartbeat:
        type: string
      edge_svc_nodes:
        type: string
      edge_svc_status:
        type: string
      edge_svc_version:
        type: string
      fog_svc:
        items:
          type: integer
        type: array
      fog_svc_cluster:
        type: string
      fog_svc_heartbeat:
        type: string
      fog_svc_nodes:
        type: string
      fog_svc_status:
        type: string
      fog_svc_version:
        type: string
      id:
        type: string
      labels:
        $ref: '#/definitions/domain.Labels'
      name:
        type: string
      qos:
        $ref: '#/definitions/domain.QoS'
      updated_at:
        type: string
    type: object
  domain.ApplicationState:
    enum:
    - progressing
    - healthy
    - failed
    - "NULL"
    type: string
    x-enum-varnames:
    - StateProgressing
    - StateHealthy
    - StateFailed
    - StateNULL
  domain.Cluster:
    properties:
      created_at:
        type: string
      id:
        type: string
      ip:
        type: string
      raft_id:
        type: integer
      role:
        $ref: '#/definitions/domain.ClusterRole'
      type:
        $ref: '#/definitions/domain.ClusterType'
      updated_at:
        type: string
    type: object
  domain.ClusterRole:
    enum:
    - master
    - worker
    type: string
    x-enum-varnames:
    - ClusterRoleMaster
    - ClusterRoleWorker
  domain.ClusterType:
    enum:
    - cloud
    - fog
    - edge
    type: string
    x-enum-varnames:
    - ClusterTypeCloud
    - ClusterTypeFog
    - ClusterTypeEdge
  domain.Labels:
    additionalProperties:
      type: string
    type: object
  domain.Node:
    properties:
      cluster_id:
        type: string
      cpu:
        type: integer
      cpu_arch:
        type: string
      created_at:
        type: string
      energy:
        type: number
      ephemeral_storage:
        type: number
      is_disk_pressure_exists:
        type: boolean
      is_memory_pressure_exists:
        type: boolean
      is_pid_pressure_exists:
        type: boolean
      is_ready:
        type: boolean
      is_schedulable:
        type: boolean
      location:
        type: string
      memory:
        type: number
      name:
        type: string
      network_bandwidth:
        type: number
      pricing:
        type: number
      updated_at:
        type: string
    type: object
  domain.QoS:
    properties:
      energy:
        type: number
      performance:
        type: number
      pricing:
        type: number
    type: object
  dto.AddClusterReq:
    properties:
      ip:
        type: string
      raft_id:
        type: integer
      role:
        $ref: '#/definitions/domain.ClusterRole'
      type:
        $ref: '#/definitions/domain.ClusterType'
    type: object
  dto.Application:
    properties:
      id:
        type: string
      labels:
        $ref: '#/definitions/domain.Labels'
      name:
        type: string
      svc:
        items:
          type: integer
        type: array
      svc_nodes:
        type: string
      svc_version:
        type: string
    type: object
  dto.ClusterApplicationStatus:
    properties:
      application_version:
        type: string
      message:
        type: string
      status:
        $ref: '#/definitions/domain.ApplicationState'
    type: object
  dto.ScheduledApplication:
    properties:
      application:
        $ref: '#/definitions/dto.Application'
      cloud_ip:
        type: string
      edge_ip:
        type: string
      fog_ip:
        type: string
    type: object
  dto.UpdateClusterReq:
    properties:
      ip:
        type: string
      raft_id:
        type: integer
      role:
        $ref: '#/definitions/domain.ClusterRole'
      type:
        $ref: '#/definitions/domain.ClusterType'
    type: object
  dto.UpdateClusterResp:
    properties:
      cluster_config:
        additionalProperties:
          type: string
        type: object
      created_at:
        type: string
      id:
        type: string
      ip:
        type: string
      type:
        $ref: '#/definitions/domain.ClusterType'
      updated_at:
        type: string
    type: object
  dto.UpsertNode:
    properties:
      nodes:
        items:
          $ref: '#/definitions/domain.Node'
        type: array
    type: object
info:
  contact: {}
paths:
  /swarmchestrate/api/v1/applications:
    get:
      description: Returns all applications currently registered
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Application'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: List all applications
      tags:
      - applications
    post:
      consumes:
      - multipart/form-data
      description: Creates a new application from uploaded YAML service files
      parameters:
      - description: Application YAML
        in: formData
        name: application
        type: file
      - description: Cloud service YAML
        in: formData
        name: cloud_svc
        type: file
      - description: Fog service YAML
        in: formData
        name: fog_svc
        type: file
      - description: Edge service YAML
        in: formData
        name: edge_svc
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Application'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create an application
      tags:
      - applications
  /swarmchestrate/api/v1/applications/{id}:
    delete:
      description: Deletes an application by UUID
      parameters:
      - description: Application ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete an application
      tags:
      - applications
    get:
      description: Returns application details by UUID
      parameters:
      - description: Application ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Application'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get application by ID
      tags:
      - applications
    patch:
      consumes:
      - multipart/form-data
      description: Updates an existing application using uploaded YAML service files
      parameters:
      - description: Application ID
        in: path
        name: id
        required: true
        type: string
      - description: Application YAML
        in: formData
        name: application
        type: file
      - description: Cloud service YAML
        in: formData
        name: cloud_svc
        type: file
      - description: Fog service YAML
        in: formData
        name: fog_svc
        type: file
      - description: Edge service YAML
        in: formData
        name: edge_svc
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Application'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update an application
      tags:
      - applications
  /swarmchestrate/api/v1/clusters:
    get:
      description: Returns all clusters, optionally filtered by type
      parameters:
      - description: Cluster Type
        enum:
        - cloud
        - fog
        - edge
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Cluster'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: List clusters
      tags:
      - clusters
    post:
      consumes:
      - application/json
      description: Accepts cluster configuration and registers it in the system
      parameters:
      - description: Cluster request payload
        in: body
        name: cluster
        required: true
        schema:
          $ref: '#/definitions/dto.AddClusterReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Cluster'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new cluster
      tags:
      - clusters
  /swarmchestrate/api/v1/clusters/{cluster-id}/applications/{application-id}:
    get:
      description: Returns a single scheduled app by cluster ID and app ID
      parameters:
      - description: Cluster ID
        in: path
        name: cluster-id
        required: true
        type: string
      - description: Application ID
        in: path
        name: application-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ScheduledApplication'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get a specific scheduled application for a cluster
      tags:
      - applications
  /swarmchestrate/api/v1/clusters/{cluster-id}/applications/{application-id}/status:
    post:
      consumes:
      - application/json
      description: Used by a cluster to report the current state of a scheduled app
      parameters:
      - description: Cluster ID
        in: path
        name: cluster-id
        required: true
        type: string
      - description: Application ID
        in: path
        name: application-id
        required: true
        type: string
      - description: Status payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.ClusterApplicationStatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
        "406":
          description: Not Acceptable
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Report application status from a worker cluster
      tags:
      - applications
  /swarmchestrate/api/v1/clusters/{cluster-id}/applications/scheduled:
    get:
      description: Returns all apps scheduled for the given cluster
      parameters:
      - description: Cluster ID
        in: path
        name: cluster-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ScheduledApplication'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: List scheduled applications for a cluster
      tags:
      - applications
  /swarmchestrate/api/v1/clusters/{id}:
    delete:
      description: Deletes a cluster by UUID
      parameters:
      - description: Cluster ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete a cluster
      tags:
      - clusters
    get:
      description: Returns a cluster by UUID if it exists
      parameters:
      - description: Cluster ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Cluster'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get cluster by ID
      tags:
      - clusters
    patch:
      consumes:
      - application/json
      description: Updates an existing cluster's configuration
      parameters:
      - description: Cluster ID
        in: path
        name: id
        required: true
        type: string
      - description: Cluster update payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateClusterReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UpdateClusterResp'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update a cluster
      tags:
      - clusters
  /swarmchestrate/api/v1/clusters/{id}/nodes:
    put:
      consumes:
      - application/json
      description: Adds or updates nodes in the specified cluster
      parameters:
      - description: Cluster ID
        in: path
        name: id
        required: true
        type: string
      - description: Node upsert payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.UpsertNode'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Node'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Upsert cluster nodes
      tags:
      - nodes
  /swarmchestrate/api/v1/clusters/config:
    get:
      description: Used by worker clusters to fetch current configuration (e.g., IPs)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get cluster configuration for worker clusters
      tags:
      - clusters
swagger: "2.0"
